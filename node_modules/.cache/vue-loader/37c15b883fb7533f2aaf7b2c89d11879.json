{"remainingRequest":"/home/tamthanh/vue-poke-memmories-ytb/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/tamthanh/vue-poke-memmories-ytb/src/App.vue?vue&type=template&id=7ba5bd90","dependencies":[{"path":"/home/tamthanh/vue-poke-memmories-ytb/src/App.vue","mtime":1663872080393},{"path":"/home/tamthanh/vue-poke-memmories-ytb/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1663872848373},{"path":"/home/tamthanh/vue-poke-memmories-ytb/node_modules/cache-loader/dist/cjs.js","mtime":1663872846063},{"path":"/home/tamthanh/vue-poke-memmories-ytb/node_modules/vue-loader-v16/dist/index.js","mtime":1663872847403}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPG1haW4tc2NyZWVuCiAgICB2LWlmPSJzdGF0dXNNYXRjaCA9PT0gJ2RlZmF1bHQnIgogICAgQG9uU3RhcnQ9Im9uSGFuZGxlQmVmb3JlU3RhcnQoJGV2ZW50KSIKICAvPgogIDxpbnRlcmFjdC1zY3JlZW4KICAgIHYtaWY9InN0YXR1c01hdGNoID09PSAnbWF0Y2gnIgogICAgOmNhcmRzQ29udGV4dD0ic2V0dGluZ3MuY2FyZHNDb250ZXh0IgogICAgQG9uRmluaXNoPSJvbkdldFJlc3VsdCIKICAvPgogIDxyZXN1bHQtc2NyZWVuCiAgICB2LWlmPSJzdGF0dXNNYXRjaCA9PT0gJ3Jlc3VsdCciCiAgICA6dGltZXI9InRpbWVyIgogICAgQG9uU3RhcnRBZ2Fpbj0ic3RhdHVzTWF0Y2ggPSAnZGVmYXVsdCciCiAgLz4KICA8Y29weS1yaWdodCAvPgo="},{"version":3,"sources":["/home/tamthanh/vue-poke-memmories-ytb/src/App.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC","file":"/home/tamthanh/vue-poke-memmories-ytb/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <main-screen\n    v-if=\"statusMatch === 'default'\"\n    @onStart=\"onHandleBeforeStart($event)\"\n  />\n  <interact-screen\n    v-if=\"statusMatch === 'match'\"\n    :cardsContext=\"settings.cardsContext\"\n    @onFinish=\"onGetResult\"\n  />\n  <result-screen\n    v-if=\"statusMatch === 'result'\"\n    :timer=\"timer\"\n    @onStartAgain=\"statusMatch = 'default'\"\n  />\n  <copy-right />\n</template>\n\n<script>\nimport MainScreen from \"./components/MainScreen.vue\";\nimport InteractScreen from \"./components/InteractScreen.vue\";\nimport ResultScreen from \"./components/ResultScreen.vue\";\nimport CopyRight from \"./components/CopyRight.vue\";\n\nimport { shuffled } from \"./utils/array\";\n\nexport default {\n  name: \"App\",\n  components: {\n    MainScreen,\n    InteractScreen,\n    ResultScreen,\n    CopyRight,\n  },\n  data() {\n    return {\n      settings: {\n        totalOfBlocks: 0,\n        cardsContext: [],\n        startedAt: null,\n      },\n      statusMatch: \"default\",\n      timer: 0,\n    };\n  },\n  methods: {\n    onHandleBeforeStart(config) {\n      console.log(\"running handle before start, \", config);\n      this.settings.totalOfBlocks = config.totalOfBlocks;\n\n      const firstCards = Array.from(\n        { length: this.settings.totalOfBlocks / 2 },\n        (_, i) => i + 1\n      );\n      const secondCards = [...firstCards];\n      const cards = [...firstCards, ...secondCards];\n      this.settings.cardsContext = shuffled(\n        shuffled(shuffled(shuffled(cards)))\n      );\n      this.settings.startedAt = new Date().getTime();\n\n      // data ready\n      this.statusMatch = \"match\";\n    },\n\n    onGetResult() {\n      // get timer\n      this.timer = new Date().getTime() - this.settings.startedAt;\n\n      // switch to result component\n      this.statusMatch = \"result\";\n    },\n  },\n};\n</script>\n"]}]}